public final class io/ktor/client/HttpClient : java/io/Closeable, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Lio/ktor/client/engine/HttpClientEngine;Lio/ktor/client/HttpClientConfig;)V
	public synthetic fun <init> (Lio/ktor/client/engine/HttpClientEngine;Lio/ktor/client/HttpClientConfig;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun close ()V
	public final fun config (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/HttpClient;
	public final fun execute (Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getAttributes ()Lio/ktor/util/Attributes;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getEngineConfig ()Lio/ktor/client/engine/HttpClientEngineConfig;
	public final fun getReceivePipeline ()Lio/ktor/client/response/HttpReceivePipeline;
	public final fun getRequestPipeline ()Lio/ktor/client/request/HttpRequestPipeline;
	public final fun getResponsePipeline ()Lio/ktor/client/response/HttpResponsePipeline;
	public final fun getSendPipeline ()Lio/ktor/client/request/HttpSendPipeline;
}

public final class io/ktor/client/HttpClientConfig {
	public fun <init> ()V
	public final fun clone ()Lio/ktor/client/HttpClientConfig;
	public final fun engine (Lkotlin/jvm/functions/Function1;)V
	public final fun getExpectSuccess ()Z
	public final fun getFollowRedirects ()Z
	public final fun getUseDefaultTransformers ()Z
	public final fun install (Lio/ktor/client/HttpClient;)V
	public final fun install (Lio/ktor/client/features/HttpClientFeature;Lkotlin/jvm/functions/Function1;)V
	public final fun install (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun install$default (Lio/ktor/client/HttpClientConfig;Lio/ktor/client/features/HttpClientFeature;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun plusAssign (Lio/ktor/client/HttpClientConfig;)V
	public final fun setExpectSuccess (Z)V
	public final fun setFollowRedirects (Z)V
	public final fun setUseDefaultTransformers (Z)V
}

public abstract interface annotation class io/ktor/client/HttpClientDsl : java/lang/annotation/Annotation {
}

public abstract interface class io/ktor/client/HttpClientEngineContainer {
	public abstract fun getFactory ()Lio/ktor/client/engine/HttpClientEngineFactory;
}

public final class io/ktor/client/HttpClientJvmKt {
	public static final fun HttpClient (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/HttpClient;
	public static synthetic fun HttpClient$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/client/HttpClient;
}

public final class io/ktor/client/HttpClientKt {
	public static final fun HttpClient (Lio/ktor/client/engine/HttpClientEngine;Lkotlin/jvm/functions/Function1;)Lio/ktor/client/HttpClient;
	public static final fun HttpClient (Lio/ktor/client/engine/HttpClientEngineFactory;Lkotlin/jvm/functions/Function1;)Lio/ktor/client/HttpClient;
	public static synthetic fun HttpClient$default (Lio/ktor/client/engine/HttpClientEngineFactory;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/client/HttpClient;
}

public final class io/ktor/client/call/DoubleReceiveException : java/lang/IllegalStateException {
	public fun <init> (Lio/ktor/client/call/HttpClientCall;)V
	public fun getMessage ()Ljava/lang/String;
}

public final class io/ktor/client/call/HttpClientCall : java/io/Closeable, kotlinx/coroutines/CoroutineScope {
	public fun close ()V
	public final fun getAttributes ()Lio/ktor/util/Attributes;
	public final fun getClient ()Lio/ktor/client/HttpClient;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getRequest ()Lio/ktor/client/request/HttpRequest;
	public final fun getResponse ()Lio/ktor/client/response/HttpResponse;
	public final fun getResponseConfig ()Lio/ktor/client/response/HttpResponseConfig;
	public final fun receive (Lio/ktor/client/call/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/client/call/HttpClientCallKt {
	public static final fun call (Lio/ktor/client/HttpClient;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun call$default (Lio/ktor/client/HttpClient;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/ktor/client/call/HttpEngineCall {
	public fun <init> (Lio/ktor/client/request/HttpRequest;Lio/ktor/client/response/HttpResponse;)V
	public final fun component1 ()Lio/ktor/client/request/HttpRequest;
	public final fun component2 ()Lio/ktor/client/response/HttpResponse;
	public final fun copy (Lio/ktor/client/request/HttpRequest;Lio/ktor/client/response/HttpResponse;)Lio/ktor/client/call/HttpEngineCall;
	public static synthetic fun copy$default (Lio/ktor/client/call/HttpEngineCall;Lio/ktor/client/request/HttpRequest;Lio/ktor/client/response/HttpResponse;ILjava/lang/Object;)Lio/ktor/client/call/HttpEngineCall;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getRequest ()Lio/ktor/client/request/HttpRequest;
	public final fun getResponse ()Lio/ktor/client/response/HttpResponse;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/client/call/NoTransformationFoundException : java/lang/UnsupportedOperationException {
	public fun <init> (Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)V
	public fun getMessage ()Ljava/lang/String;
}

public final class io/ktor/client/call/ReceivePipelineException : java/lang/IllegalStateException {
	public fun <init> (Lio/ktor/client/call/HttpClientCall;Lio/ktor/client/call/TypeInfo;Ljava/lang/Throwable;)V
	public fun getCause ()Ljava/lang/Throwable;
	public final fun getInfo ()Lio/ktor/client/call/TypeInfo;
	public final fun getRequest ()Lio/ktor/client/call/HttpClientCall;
}

public class io/ktor/client/call/TypeBase {
	public fun <init> ()V
}

public final class io/ktor/client/call/TypeInfo {
	public fun <init> (Lkotlin/reflect/KClass;Ljava/lang/reflect/Type;)V
	public final fun component1 ()Lkotlin/reflect/KClass;
	public final fun component2 ()Ljava/lang/reflect/Type;
	public final fun copy (Lkotlin/reflect/KClass;Ljava/lang/reflect/Type;)Lio/ktor/client/call/TypeInfo;
	public static synthetic fun copy$default (Lio/ktor/client/call/TypeInfo;Lkotlin/reflect/KClass;Ljava/lang/reflect/Type;ILjava/lang/Object;)Lio/ktor/client/call/TypeInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getReifiedType ()Ljava/lang/reflect/Type;
	public final fun getType ()Lkotlin/reflect/KClass;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/client/call/UnsupportedContentTypeException : java/lang/IllegalStateException {
	public fun <init> (Lio/ktor/http/content/OutgoingContent;)V
}

public final class io/ktor/client/call/UnsupportedUpgradeProtocolException : java/lang/IllegalArgumentException {
	public fun <init> (Lio/ktor/http/Url;)V
}

public final class io/ktor/client/call/UtilsJvmKt {
	public static final fun call (Lio/ktor/client/HttpClient;Ljava/net/URL;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun call$default (Lio/ktor/client/HttpClient;Ljava/net/URL;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/ktor/client/call/UtilsKt {
	public static final fun call (Lio/ktor/client/HttpClient;Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun call (Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun call (Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun call$default (Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun call$default (Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class io/ktor/client/engine/HttpClientEngine : java/io/Closeable, kotlinx/coroutines/CoroutineScope {
	public abstract fun execute (Lio/ktor/client/call/HttpClientCall;Lio/ktor/client/request/HttpRequestData;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getConfig ()Lio/ktor/client/engine/HttpClientEngineConfig;
	public abstract fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
}

public class io/ktor/client/engine/HttpClientEngineConfig {
	public fun <init> ()V
	public final fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getPipelining ()Z
	public final fun getResponse ()Lio/ktor/client/response/HttpResponseConfig;
	public final fun getThreadsCount ()I
	public final fun setDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun setPipelining (Z)V
	public final fun setThreadsCount (I)V
}

public abstract interface class io/ktor/client/engine/HttpClientEngineFactory {
	public abstract fun create (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/engine/HttpClientEngine;
}

public final class io/ktor/client/engine/HttpClientEngineFactory$DefaultImpls {
	public static synthetic fun create$default (Lio/ktor/client/engine/HttpClientEngineFactory;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/client/engine/HttpClientEngine;
}

public final class io/ktor/client/engine/HttpClientEngineKt {
	public static final fun config (Lio/ktor/client/engine/HttpClientEngineFactory;Lkotlin/jvm/functions/Function1;)Lio/ktor/client/engine/HttpClientEngineFactory;
}

public abstract class io/ktor/client/engine/HttpClientJvmEngine : io/ktor/client/engine/HttpClientEngine {
	public fun <init> (Ljava/lang/String;)V
	public fun close ()V
	protected final fun createCallContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public synthetic fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public fun getDispatcher ()Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;
}

public final class io/ktor/client/engine/UtilsKt {
	public static final fun mergeHeaders (Lio/ktor/http/Headers;Lio/ktor/http/content/OutgoingContent;Lkotlin/jvm/functions/Function2;)V
}

public final class io/ktor/client/features/BadResponseStatusException : java/lang/IllegalStateException {
	public fun <init> (Lio/ktor/http/HttpStatusCode;Lio/ktor/client/response/HttpResponse;)V
	public final fun getResponse ()Lio/ktor/client/response/HttpResponse;
	public final fun getStatusCode ()Lio/ktor/http/HttpStatusCode;
}

public final class io/ktor/client/features/DefaultRequest {
	public static final field Feature Lio/ktor/client/features/DefaultRequest$Feature;
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/client/features/DefaultRequest$Feature : io/ktor/client/features/HttpClientFeature {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/client/features/DefaultRequest;Lio/ktor/client/HttpClient;)V
	public synthetic fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public fun prepare (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/features/DefaultRequest;
	public synthetic fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/client/features/DefaultRequestKt {
	public static final fun defaultRequest (Lio/ktor/client/HttpClientConfig;Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/client/features/DefaultTransformKt {
	public static final fun defaultTransformers (Lio/ktor/client/HttpClient;)V
}

public final class io/ktor/client/features/ExpectSuccess {
	public static final field Companion Lio/ktor/client/features/ExpectSuccess$Companion;
	public fun <init> ()V
}

public final class io/ktor/client/features/ExpectSuccess$Companion : io/ktor/client/features/HttpClientFeature {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/client/features/ExpectSuccess;Lio/ktor/client/HttpClient;)V
	public synthetic fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public fun prepare (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/features/ExpectSuccess;
	public synthetic fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public abstract interface class io/ktor/client/features/HttpClientFeature {
	public abstract fun getKey ()Lio/ktor/util/AttributeKey;
	public abstract fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public abstract fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/client/features/HttpClientFeature$DefaultImpls {
	public static synthetic fun prepare$default (Lio/ktor/client/features/HttpClientFeature;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/ktor/client/features/HttpClientFeatureKt {
	public static final fun feature (Lio/ktor/client/HttpClient;Lio/ktor/client/features/HttpClientFeature;)Ljava/lang/Object;
}

public final class io/ktor/client/features/HttpPlainText {
	public static final field Feature Lio/ktor/client/features/HttpPlainText$Feature;
	public fun <init> (Ljava/nio/charset/Charset;)V
	public final fun getDefaultCharset ()Ljava/nio/charset/Charset;
	public final fun setDefaultCharset (Ljava/nio/charset/Charset;)V
}

public final class io/ktor/client/features/HttpPlainText$Config {
	public fun <init> ()V
	public final fun getDefaultCharset ()Ljava/nio/charset/Charset;
	public final fun setDefaultCharset (Ljava/nio/charset/Charset;)V
}

public final class io/ktor/client/features/HttpPlainText$Feature : io/ktor/client/features/HttpClientFeature {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/client/features/HttpPlainText;Lio/ktor/client/HttpClient;)V
	public synthetic fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public fun prepare (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/features/HttpPlainText;
	public synthetic fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/client/features/HttpRedirect {
	public static final field Feature Lio/ktor/client/features/HttpRedirect$Feature;
	public fun <init> ()V
}

public final class io/ktor/client/features/HttpRedirect$Feature : io/ktor/client/features/HttpClientFeature {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/client/features/HttpRedirect;Lio/ktor/client/HttpClient;)V
	public synthetic fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public fun prepare (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/features/HttpRedirect;
	public synthetic fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/client/features/HttpSend {
	public static final field Feature Lio/ktor/client/features/HttpSend$Feature;
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getMaxSendCount ()I
	public final fun intercept (Lkotlin/jvm/functions/Function3;)V
	public final fun setMaxSendCount (I)V
}

public final class io/ktor/client/features/HttpSend$Feature : io/ktor/client/features/HttpClientFeature {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/client/features/HttpSend;Lio/ktor/client/HttpClient;)V
	public synthetic fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public fun prepare (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/features/HttpSend;
	public synthetic fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/client/features/RedirectException : java/lang/IllegalStateException {
	public fun <init> (Lio/ktor/client/request/HttpRequest;Ljava/lang/String;)V
	public final fun getRequest ()Lio/ktor/client/request/HttpRequest;
}

public final class io/ktor/client/features/SendCountExceedException : java/lang/IllegalStateException {
	public fun <init> (Ljava/lang/String;)V
}

public abstract interface class io/ktor/client/features/Sender {
	public abstract fun execute (Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/client/features/UserAgent {
	public static final field Feature Lio/ktor/client/features/UserAgent$Feature;
	public fun <init> (Ljava/lang/String;)V
	public final fun getAgent ()Ljava/lang/String;
}

public final class io/ktor/client/features/UserAgent$Config {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAgent ()Ljava/lang/String;
	public final fun setAgent (Ljava/lang/String;)V
}

public final class io/ktor/client/features/UserAgent$Feature : io/ktor/client/features/HttpClientFeature {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/client/features/UserAgent;Lio/ktor/client/HttpClient;)V
	public synthetic fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public fun prepare (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/features/UserAgent;
	public synthetic fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/client/features/UserAgentKt {
	public static final fun BrowserUserAgent (Lio/ktor/client/HttpClientConfig;)V
	public static final fun CurlUserAgent (Lio/ktor/client/HttpClientConfig;)V
}

public final class io/ktor/client/features/cookies/AcceptAllCookiesStorage : io/ktor/client/features/cookies/CookiesStorage {
	public fun <init> ()V
	public fun addCookie (Lio/ktor/http/Url;Lio/ktor/http/Cookie;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun get (Lio/ktor/http/Url;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/client/features/cookies/ConstantCookiesStorage : io/ktor/client/features/cookies/CookiesStorage {
	public fun <init> ([Lio/ktor/http/Cookie;)V
	public fun addCookie (Lio/ktor/http/Url;Lio/ktor/http/Cookie;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun get (Lio/ktor/http/Url;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class io/ktor/client/features/cookies/CookiesStorage {
	public abstract fun addCookie (Lio/ktor/http/Url;Lio/ktor/http/Cookie;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun get (Lio/ktor/http/Url;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/client/features/cookies/CookiesStorageKt {
	public static final fun addCookie (Lio/ktor/client/features/cookies/CookiesStorage;Ljava/lang/String;Lio/ktor/http/Cookie;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/client/features/cookies/HttpCookies {
	public static final field Companion Lio/ktor/client/features/cookies/HttpCookies$Companion;
	public fun <init> (Lio/ktor/client/features/cookies/CookiesStorage;)V
	public final fun get (Lio/ktor/http/Url;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/client/features/cookies/HttpCookies$Companion : io/ktor/client/features/HttpClientFeature {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/client/features/cookies/HttpCookies;Lio/ktor/client/HttpClient;)V
	public synthetic fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public fun prepare (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/features/cookies/HttpCookies;
	public synthetic fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/client/features/cookies/HttpCookies$Config {
	public fun <init> ()V
	public final fun default (Lkotlin/jvm/functions/Function1;)V
	public final fun getStorage ()Lio/ktor/client/features/cookies/CookiesStorage;
	public final fun setStorage (Lio/ktor/client/features/cookies/CookiesStorage;)V
}

public final class io/ktor/client/features/cookies/HttpCookiesKt {
	public static final fun cookies (Lio/ktor/client/HttpClient;Lio/ktor/http/Url;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun cookies (Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun get (Ljava/util/List;Ljava/lang/String;)Lio/ktor/http/Cookie;
}

public final class io/ktor/client/features/observer/DelegatedCallKt {
	public static final fun wrapWithContent (Lio/ktor/client/call/HttpClientCall;Lkotlinx/coroutines/io/ByteReadChannel;Z)Lio/ktor/client/call/HttpClientCall;
}

public final class io/ktor/client/features/observer/ResponseObserver {
	public static final field Feature Lio/ktor/client/features/observer/ResponseObserver$Feature;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
}

public final class io/ktor/client/features/observer/ResponseObserver$Config {
	public fun <init> ()V
	public final fun onResponse (Lkotlin/jvm/functions/Function2;)V
}

public final class io/ktor/client/features/observer/ResponseObserver$Feature : io/ktor/client/features/HttpClientFeature {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/client/features/observer/ResponseObserver;Lio/ktor/client/HttpClient;)V
	public synthetic fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public fun prepare (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/features/observer/ResponseObserver;
	public synthetic fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/client/features/observer/ResponseObserverKt {
	public static final fun ResponseObserver (Lio/ktor/client/HttpClientConfig;Lkotlin/jvm/functions/Function2;)V
}

public final class io/ktor/client/request/BuildersKt {
	public static final fun request (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/request/HttpRequestBuilder;
}

public final class io/ktor/client/request/BuildersWithUrlKt {
	public static final fun url (Lio/ktor/client/request/HttpRequestBuilder;Lio/ktor/http/Url;)V
}

public abstract class io/ktor/client/request/ClientUpgradeContent : io/ktor/http/content/OutgoingContent$NoContent {
	public fun <init> ()V
	public final fun getOutput ()Lkotlinx/coroutines/io/ByteWriteChannel;
	public final fun pipeTo (Lkotlinx/coroutines/io/ByteWriteChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun verify (Lio/ktor/http/Headers;)V
}

public class io/ktor/client/request/DefaultHttpRequest : io/ktor/client/request/HttpRequest {
	public fun <init> (Lio/ktor/client/call/HttpClientCall;Lio/ktor/client/request/HttpRequestData;)V
	public fun getAttributes ()Lio/ktor/util/Attributes;
	public fun getCall ()Lio/ktor/client/call/HttpClientCall;
	public fun getContent ()Lio/ktor/http/content/OutgoingContent;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getExecutionContext ()Lkotlinx/coroutines/Job;
	public fun getHeaders ()Lio/ktor/http/Headers;
	public fun getMethod ()Lio/ktor/http/HttpMethod;
	public fun getUrl ()Lio/ktor/http/Url;
}

public abstract interface class io/ktor/client/request/HttpRequest : io/ktor/http/HttpMessage, kotlinx/coroutines/CoroutineScope {
	public abstract fun getAttributes ()Lio/ktor/util/Attributes;
	public abstract fun getCall ()Lio/ktor/client/call/HttpClientCall;
	public abstract fun getContent ()Lio/ktor/http/content/OutgoingContent;
	public abstract fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public abstract fun getExecutionContext ()Lkotlinx/coroutines/Job;
	public abstract fun getMethod ()Lio/ktor/http/HttpMethod;
	public abstract fun getUrl ()Lio/ktor/http/Url;
}

public final class io/ktor/client/request/HttpRequest$DefaultImpls {
	public static fun getCoroutineContext (Lio/ktor/client/request/HttpRequest;)Lkotlin/coroutines/CoroutineContext;
	public static fun getExecutionContext (Lio/ktor/client/request/HttpRequest;)Lkotlinx/coroutines/Job;
}

public final class io/ktor/client/request/HttpRequestBuilder : io/ktor/http/HttpMessageBuilder {
	public static final field Companion Lio/ktor/client/request/HttpRequestBuilder$Companion;
	public fun <init> ()V
	public final fun build ()Lio/ktor/client/request/HttpRequestData;
	public final fun getBody ()Ljava/lang/Object;
	public final fun getExecutionContext ()Lkotlinx/coroutines/Job;
	public fun getHeaders ()Lio/ktor/http/HeadersBuilder;
	public final fun getMethod ()Lio/ktor/http/HttpMethod;
	public final fun getUrl ()Lio/ktor/http/URLBuilder;
	public final fun setAttributes (Lkotlin/jvm/functions/Function1;)V
	public final fun setBody (Ljava/lang/Object;)V
	public final fun setMethod (Lio/ktor/http/HttpMethod;)V
	public final fun takeFrom (Lio/ktor/client/request/HttpRequestBuilder;)Lio/ktor/client/request/HttpRequestBuilder;
	public final fun url (Lkotlin/jvm/functions/Function2;)V
}

public final class io/ktor/client/request/HttpRequestBuilder$Companion {
}

public final class io/ktor/client/request/HttpRequestData {
	public final fun getAttributes ()Lio/ktor/util/Attributes;
	public final fun getBody ()Ljava/lang/Object;
	public final fun getExecutionContext ()Lkotlinx/coroutines/Job;
	public final fun getHeaders ()Lio/ktor/http/Headers;
	public final fun getMethod ()Lio/ktor/http/HttpMethod;
	public final fun getUrl ()Lio/ktor/http/Url;
}

public final class io/ktor/client/request/HttpRequestJvmKt {
	public static final fun invoke (Lio/ktor/client/request/HttpRequestBuilder$Companion;Ljava/net/URL;)Lio/ktor/client/request/HttpRequestBuilder;
	public static final fun url (Lio/ktor/client/request/HttpRequestBuilder;Ljava/net/URL;)V
}

public final class io/ktor/client/request/HttpRequestKt {
	public static final fun headers (Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/jvm/functions/Function1;)Lio/ktor/http/HeadersBuilder;
	public static final fun invoke (Lio/ktor/client/request/HttpRequestBuilder$Companion;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/client/request/HttpRequestBuilder;
	public static final fun invoke (Lio/ktor/client/request/HttpRequestBuilder$Companion;Lkotlin/jvm/functions/Function1;)Lio/ktor/client/request/HttpRequestBuilder;
	public static synthetic fun invoke$default (Lio/ktor/client/request/HttpRequestBuilder$Companion;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/client/request/HttpRequestBuilder;
	public static final fun takeFrom (Lio/ktor/client/request/HttpRequestBuilder;Lio/ktor/client/request/HttpRequest;)Lio/ktor/client/request/HttpRequestBuilder;
	public static final fun takeFrom (Lio/ktor/client/request/HttpRequestBuilder;Lio/ktor/client/request/HttpRequestData;)Lio/ktor/client/request/HttpRequestBuilder;
	public static final fun url (Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/String;)V
	public static final fun url (Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static final fun url (Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun url$default (Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public final class io/ktor/client/request/HttpRequestPipeline : io/ktor/util/pipeline/Pipeline {
	public static final field Phases Lio/ktor/client/request/HttpRequestPipeline$Phases;
	public fun <init> ()V
}

public final class io/ktor/client/request/HttpRequestPipeline$Phases {
	public final fun getBefore ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getRender ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getSend ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getState ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getTransform ()Lio/ktor/util/pipeline/PipelinePhase;
}

public final class io/ktor/client/request/HttpSendPipeline : io/ktor/util/pipeline/Pipeline {
	public static final field Phases Lio/ktor/client/request/HttpSendPipeline$Phases;
	public fun <init> ()V
}

public final class io/ktor/client/request/HttpSendPipeline$Phases {
	public final fun getBefore ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getEngine ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getState ()Lio/ktor/util/pipeline/PipelinePhase;
}

public final class io/ktor/client/request/UtilsKt {
	public static final fun accept (Lio/ktor/client/request/HttpRequestBuilder;Lio/ktor/http/ContentType;)V
	public static final fun getHost (Lio/ktor/client/request/HttpRequestBuilder;)Ljava/lang/String;
	public static final fun getPort (Lio/ktor/client/request/HttpRequestBuilder;)I
	public static final fun header (Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/String;Ljava/lang/Object;)V
	public static final fun parameter (Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/String;Ljava/lang/Object;)V
	public static final fun setHost (Lio/ktor/client/request/HttpRequestBuilder;Ljava/lang/String;)V
	public static final fun setPort (Lio/ktor/client/request/HttpRequestBuilder;I)V
}

public final class io/ktor/client/request/forms/FormBuilder {
	public final fun append (Lio/ktor/client/request/forms/FormPart;)V
	public final fun append (Ljava/lang/String;Ljava/lang/Object;Lio/ktor/http/Headers;)V
	public static synthetic fun append$default (Lio/ktor/client/request/forms/FormBuilder;Ljava/lang/String;Ljava/lang/Object;Lio/ktor/http/Headers;ILjava/lang/Object;)V
}

public final class io/ktor/client/request/forms/FormDataContent : io/ktor/http/content/OutgoingContent$ByteArrayContent {
	public fun <init> (Lio/ktor/http/Parameters;)V
	public fun bytes ()[B
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public final fun getFormData ()Lio/ktor/http/Parameters;
}

public final class io/ktor/client/request/forms/FormDslKt {
	public static final fun append (Lio/ktor/client/request/forms/FormBuilder;Ljava/lang/String;Lio/ktor/http/Headers;Lkotlin/jvm/functions/Function1;)V
	public static final fun append (Lio/ktor/client/request/forms/FormBuilder;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun append$default (Lio/ktor/client/request/forms/FormBuilder;Ljava/lang/String;Lio/ktor/http/Headers;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun formData (Lkotlin/jvm/functions/Function1;)Ljava/util/List;
	public static final fun formData ([Lio/ktor/client/request/forms/FormPart;)Ljava/util/List;
}

public final class io/ktor/client/request/forms/FormPart {
	public fun <init> (Ljava/lang/String;Ljava/lang/Object;Lio/ktor/http/Headers;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Object;Lio/ktor/http/Headers;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Object;
	public final fun component3 ()Lio/ktor/http/Headers;
	public final fun copy (Ljava/lang/String;Ljava/lang/Object;Lio/ktor/http/Headers;)Lio/ktor/client/request/forms/FormPart;
	public static synthetic fun copy$default (Lio/ktor/client/request/forms/FormPart;Ljava/lang/String;Ljava/lang/Object;Lio/ktor/http/Headers;ILjava/lang/Object;)Lio/ktor/client/request/forms/FormPart;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeaders ()Lio/ktor/http/Headers;
	public final fun getKey ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/client/request/forms/MultiPartFormDataContent : io/ktor/http/content/OutgoingContent$WriteChannelContent {
	public fun <init> (Ljava/util/List;)V
	public fun getContentType ()Lio/ktor/http/ContentType;
	public fun writeTo (Lkotlinx/coroutines/io/ByteWriteChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/client/response/HttpReceivePipeline : io/ktor/util/pipeline/Pipeline {
	public static final field Phases Lio/ktor/client/response/HttpReceivePipeline$Phases;
	public fun <init> ()V
}

public final class io/ktor/client/response/HttpReceivePipeline$Phases {
	public final fun getAfter ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getBefore ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getState ()Lio/ktor/util/pipeline/PipelinePhase;
}

public abstract interface class io/ktor/client/response/HttpResponse : io/ktor/http/HttpMessage, java/io/Closeable, kotlinx/coroutines/CoroutineScope {
	public abstract fun close ()V
	public abstract fun getCall ()Lio/ktor/client/call/HttpClientCall;
	public abstract fun getContent ()Lkotlinx/coroutines/io/ByteReadChannel;
	public abstract fun getExecutionContext ()Lkotlinx/coroutines/Job;
	public abstract fun getRequestTime ()Lio/ktor/util/date/GMTDate;
	public abstract fun getResponseTime ()Lio/ktor/util/date/GMTDate;
	public abstract fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public abstract fun getVersion ()Lio/ktor/http/HttpProtocolVersion;
}

public final class io/ktor/client/response/HttpResponse$DefaultImpls {
	public static fun close (Lio/ktor/client/response/HttpResponse;)V
	public static fun getExecutionContext (Lio/ktor/client/response/HttpResponse;)Lkotlinx/coroutines/Job;
}

public class io/ktor/client/response/HttpResponseConfig {
	public fun <init> ()V
	public final fun getDefaultCharset ()Ljava/nio/charset/Charset;
	public final fun setDefaultCharset (Ljava/nio/charset/Charset;)V
}

public final class io/ktor/client/response/HttpResponseContainer {
	public fun <init> (Lio/ktor/client/call/TypeInfo;Ljava/lang/Object;)V
	public final fun component1 ()Lio/ktor/client/call/TypeInfo;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Lio/ktor/client/call/TypeInfo;Ljava/lang/Object;)Lio/ktor/client/response/HttpResponseContainer;
	public static synthetic fun copy$default (Lio/ktor/client/response/HttpResponseContainer;Lio/ktor/client/call/TypeInfo;Ljava/lang/Object;ILjava/lang/Object;)Lio/ktor/client/response/HttpResponseContainer;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExpectedType ()Lio/ktor/client/call/TypeInfo;
	public final fun getResponse ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/client/response/HttpResponseKt {
	public static final fun readText (Lio/ktor/client/response/HttpResponse;Ljava/nio/charset/Charset;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun readText$default (Lio/ktor/client/response/HttpResponse;Ljava/nio/charset/Charset;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/ktor/client/response/HttpResponsePipeline : io/ktor/util/pipeline/Pipeline {
	public static final field Phases Lio/ktor/client/response/HttpResponsePipeline$Phases;
	public fun <init> ()V
}

public final class io/ktor/client/response/HttpResponsePipeline$Phases {
	public final fun getAfter ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getParse ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getReceive ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getState ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getTransform ()Lio/ktor/util/pipeline/PipelinePhase;
}

public final class io/ktor/client/response/ReadersKt {
	public static final fun discardRemaining (Lio/ktor/client/response/HttpResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun readBytes (Lio/ktor/client/response/HttpResponse;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun readBytes (Lio/ktor/client/response/HttpResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/client/response/UpgradeHttpResponse : io/ktor/client/response/HttpResponse {
	public fun <init> (Lio/ktor/client/call/HttpClientCall;Lio/ktor/util/date/GMTDate;Lkotlin/coroutines/CoroutineContext;)V
	public fun close ()V
	public fun getCall ()Lio/ktor/client/call/HttpClientCall;
	public fun getContent ()Lkotlinx/coroutines/io/ByteReadChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getExecutionContext ()Lkotlinx/coroutines/Job;
	public fun getHeaders ()Lio/ktor/http/Headers;
	public fun getRequestTime ()Lio/ktor/util/date/GMTDate;
	public fun getResponseTime ()Lio/ktor/util/date/GMTDate;
	public fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public fun getVersion ()Lio/ktor/http/HttpProtocolVersion;
}

public final class io/ktor/client/utils/ByteBufferPool : kotlinx/io/pool/DefaultPool {
	public fun <init> ()V
	public synthetic fun clearInstance (Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun produceInstance ()Ljava/lang/Object;
}

public final class io/ktor/client/utils/CIOJvmKt {
	public static final synthetic fun getHTTP_CLIENT_DEFAULT_DISPATCHER ()Lkotlinx/coroutines/CoroutineDispatcher;
	public static final synthetic fun getHTTP_CLIENT_THREAD_COUNT ()I
	public static final fun getHttpClientDefaultPool ()Lio/ktor/client/utils/ByteBufferPool;
}

public final class io/ktor/client/utils/CIOKt {
	public static final field DEFAULT_HTTP_BUFFER_SIZE I
	public static final field DEFAULT_HTTP_POOL_SIZE I
}

public final class io/ktor/client/utils/CacheControl {
	public static final field INSTANCE Lio/ktor/client/utils/CacheControl;
	public static final field MAX_AGE Ljava/lang/String;
	public static final field MAX_STALE Ljava/lang/String;
	public static final field MIN_FRESH Ljava/lang/String;
	public static final field MUST_REVALIDATE Ljava/lang/String;
	public static final field NO_CACHE Ljava/lang/String;
	public static final field NO_STORE Ljava/lang/String;
	public static final field NO_TRANSFORM Ljava/lang/String;
	public static final field ONLY_IF_CACHED Ljava/lang/String;
	public static final field PRIVATE Ljava/lang/String;
	public static final field PROXY_REVALIDATE Ljava/lang/String;
	public static final field PUBLIC Ljava/lang/String;
	public static final field S_MAX_AGE Ljava/lang/String;
	public final synthetic fun getMAX_AGE ()Ljava/lang/String;
	public final synthetic fun getMAX_STALE ()Ljava/lang/String;
	public final synthetic fun getMIN_FRESH ()Ljava/lang/String;
	public final synthetic fun getMUST_REVALIDATE ()Ljava/lang/String;
	public final synthetic fun getNO_CACHE ()Ljava/lang/String;
	public final synthetic fun getNO_STORE ()Ljava/lang/String;
	public final synthetic fun getNO_TRANSFORM ()Ljava/lang/String;
	public final synthetic fun getONLY_IF_CACHED ()Ljava/lang/String;
	public final synthetic fun getPRIVATE ()Ljava/lang/String;
	public final synthetic fun getPROXY_REVALIDATE ()Ljava/lang/String;
	public final synthetic fun getPUBLIC ()Ljava/lang/String;
	public final synthetic fun getS_MAX_AGE ()Ljava/lang/String;
}

public final class io/ktor/client/utils/ContentKt {
	public static final fun wrapHeaders (Lio/ktor/http/content/OutgoingContent;Lkotlin/jvm/functions/Function1;)Lio/ktor/http/content/OutgoingContent;
}

public final class io/ktor/client/utils/EmptyContent : io/ktor/http/content/OutgoingContent$NoContent {
	public static final field INSTANCE Lio/ktor/client/utils/EmptyContent;
}

public final class io/ktor/client/utils/HeadersKt {
	public static final fun buildHeaders (Lkotlin/jvm/functions/Function1;)Lio/ktor/http/Headers;
	public static synthetic fun buildHeaders$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/http/Headers;
}

